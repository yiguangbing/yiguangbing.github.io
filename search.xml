<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/08/02/hello-world/"/>
      <url>/2022/08/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 其他类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Servlet</title>
      <link href="/2022/08/02/06_Servlet/"/>
      <url>/2022/08/02/06_Servlet/</url>
      
        <content type="html"><![CDATA[<h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><blockquote><p>动态网页技术。与服务器相关的。动态生成页面要展示的html内容。</p></blockquote><h1 id="1-Servlet入门"><a href="#1-Servlet入门" class="headerlink" title="1.Servlet入门"></a>1.Servlet入门</h1><h2 id="1-1-web服务器"><a href="#1-1-web服务器" class="headerlink" title="1.1 web服务器"></a>1.1 web服务器</h2><h3 id="1-服务器是什么"><a href="#1-服务器是什么" class="headerlink" title="1. 服务器是什么?"></a>1. 服务器是什么?</h3><blockquote><p> 网络应用一般分为C&#x2F;S和B&#x2F;S两种.</p></blockquote><ul><li>C&#x2F;S结构是Client&#x2F;Server（客户机&#x2F;服务器）的简称，桌面应用程序采用的多是这种结构；例：QQ 微信  </li><li>B&#x2F;S结构是Browser&#x2F;Server（浏览器&#x2F;服务器）的简称，特点是客户端无需安装特定的软件，只需要安装一个浏览器就可以与系统进行交互。 例：访问百度 访问搜狐</li></ul><blockquote><p>Web服务器是基于B&#x2F;S结构，通过http协议进行数据交互（收发）</p></blockquote><ul><li>浏览器———http协议———服务器</li><li>http协议规定了发送数据的格式（报文格式）</li><li>浏览器中发送和读取的格式已固定</li><li>Web服务器需要能够&#x3D;&#x3D;接收和解析浏览器发来的符合http协议的请求报文&#x3D;&#x3D;，并调用对应的代码处理，&#x3D;&#x3D;再向浏览器发送符合http协议规范响应报文&#x3D;&#x3D;。</li><li>请求报文格式：</li></ul><p>![image-20210605203357173](pic\servlet\1.请求报文格式 .png)</p><blockquote><p>请求正文就是用户请求的参数数据  。</p></blockquote><ul><li>响应报文格式:</li></ul><p>![image-20210605203558278](pic\servlet\2. 响应报文格式 .png)</p><blockquote><p>响应正文: 整个html的数据了。</p></blockquote><blockquote><p>报文实例</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">请求：</span><br><span class="line">GET  /mytest  HTTP/<span class="number">1.1</span>  </span><br><span class="line">Host: www.cnblogs.com </span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows; U; Windows NT <span class="number">5.0</span>; zh-CN; rv:<span class="number">1.8</span><span class="number">.1</span>) Gecko/<span class="number">20061010</span> Firefox/<span class="number">2.0</span>  </span><br><span class="line">.......</span><br><span class="line"></span><br><span class="line">响应：</span><br><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Content-Type:text/html;charset=utf-<span class="number">8</span></span><br><span class="line"> </span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">       Hello http!</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="2-常见名词"><a href="#2-常见名词" class="headerlink" title="2. 常见名词"></a>2. 常见名词</h3><h4 id="1-Web应用"><a href="#1-Web应用" class="headerlink" title="1. Web应用"></a>1. Web应用</h4><blockquote><p>Web应用被称为Web Application，通过浏览器访问的应用程序，从而为用户提供相关的服务，例如查询、购物等；淘宝，途牛旅游等提供服务的网站；也包含很多公司内部使用的软件，如oa系统，医院内使用的系统，企业内部业务管理系统等</p></blockquote><h4 id="2-HTTP服务器"><a href="#2-HTTP服务器" class="headerlink" title="2.  HTTP服务器"></a>2.  HTTP服务器</h4><blockquote><p>HTTP服务器：也称为Web服务器，主要功能是提供网上信息浏览服务，例如Apache、Nginx、IIS是比较常用的HTTP服务器；使用浏览器访问Web站点或者Web应用，则必须通过HTTP服务器；</p></blockquote><h4 id="3-Web应用服务器"><a href="#3-Web应用服务器" class="headerlink" title="3. Web应用服务器"></a>3. Web应用服务器</h4><blockquote><p> Web应用服务器：Web应用服务器能够运行服务器上的应用程序，并将结果返回给客户端浏览器；例如，Tomcat就是一种Web应用服务器；通常情况下，Web应用服务器兼具HTTP服务器的部分功能；</p></blockquote><p>&#x3D;&#x3D;注意：Web应用需要HTTP服务器及Web应用服务器，因为不仅需要浏览信息，还需要运行应用程序；但是tomcat已兼具了http服务器的部分功能，所以运行web应用可以直接使用tomcat。&#x3D;&#x3D;</p><h3 id="3-开发web应用的语言"><a href="#3-开发web应用的语言" class="headerlink" title="3. 开发web应用的语言"></a>3. 开发web应用的语言</h3><ul><li>Java 、.net、php等语言均可开发web应用；</li><li>java开发web应用最广泛；</li><li>官方在JavaEE中提供了Servlet、JSP组件来开发Web应用；</li></ul><h2 id="1-2-Tomcat"><a href="#1-2-Tomcat" class="headerlink" title="1.2 Tomcat"></a>1.2 Tomcat</h2><h3 id="1-Tomcat介绍"><a href="#1-Tomcat介绍" class="headerlink" title="1. Tomcat介绍"></a>1. Tomcat介绍</h3><ul><li>Tomcat开源、免费，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试Servlet&#x2F;JSP程序的首选；</li><li>下载地址：<a href="http://tomcat.apache.org/%EF%BC%9B">http://tomcat.apache.org/；</a></li><li>安装：下载到的是一个压缩包，解压缩即可（路径中不要有中文）；</li></ul><h3 id="2-目录介绍"><a href="#2-目录介绍" class="headerlink" title="2. 目录介绍"></a>2. 目录介绍</h3><table><thead><tr><th>目录名称</th><th>作用</th></tr></thead><tbody><tr><td><strong>&#x2F;bin</strong></td><td>存放Windows或Linux平台上用于启动和停止Tomcat的脚本文件</td></tr><tr><td><strong>&#x2F;conf</strong></td><td>存放Tomcat服务器的各种配置文件，其中最重要的是server.xml</td></tr><tr><td><strong>&#x2F;lib</strong></td><td>存放Tomcat服务器所需的各种JAR文件</td></tr><tr><td><strong>&#x2F;logs</strong></td><td>存放Tomcat运行中产生的日志文件</td></tr><tr><td><strong>&#x2F;temp</strong></td><td>存放Tomcat服务器在运行中产生的临时缓存</td></tr><tr><td><strong>&#x2F;webapps</strong></td><td>存放Tomcat发布的Web应用</td></tr><tr><td><strong>&#x2F;work</strong></td><td>Tomcat把由JSP生成的Servlet放于此目录下</td></tr></tbody></table><h3 id="3-启动-x2F-停止tomcat"><a href="#3-启动-x2F-停止tomcat" class="headerlink" title="3. 启动&#x2F;停止tomcat"></a>3. 启动&#x2F;停止tomcat</h3><ul><li>可通过apache解压目录中的&#x3D;&#x3D;startup.bat&#x2F;shutdown.bat&#x3D;&#x3D;来启动或停止tomcat</li><li>在浏览器地址栏中输入：<a href="http://127.0.0.1:端口号或者http://localhost:端口号，页面进入到Tomcat启动成功界面">http://127.0.0.1:端口号或者http://localhost:端口号，页面进入到Tomcat启动成功界面</a></li><li>Tomcat默认端口号为-8080</li><li>可以在conf中的server.xml中修改tomcat端口号</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在69行 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-IDEA集成Tomcat"><a href="#4-IDEA集成Tomcat" class="headerlink" title="4. IDEA集成Tomcat"></a>4. IDEA集成Tomcat</h3><h4 id="1-创建web项目"><a href="#1-创建web项目" class="headerlink" title="1. 创建web项目"></a>1. 创建web项目</h4><p>![image-20210605210254287](pic\servlet\3. 创建web项目 .png)</p><h4 id="2-集成tomcat"><a href="#2-集成tomcat" class="headerlink" title="2. 集成tomcat"></a>2. 集成tomcat</h4><blockquote><ol><li>在idea的setting中配置tomcat路径</li></ol></blockquote><p>![image-20210605210637821](pic\servlet\4. idea集成tomcat .png)</p><blockquote><p>Step2：创建项目或模块时，选择java enterprise（也可以叫javaEE 企业应用），检查Tomcat服务器设置是否正确，并勾上webApplication 自动创建web.xml文件（web项目核心文件，必须创建）</p><p>目前我们项目已经创建ok，只需要添加服务器环境就可以。修改Project Structure</p></blockquote><p>![image-20210605211037172](pic\servlet\5. idea集成tomcat .png)</p><blockquote><p>Step3:项目配置完成之后   再设置项目根路径（建议设置）</p></blockquote><p>![image-20210605211349828](pic\servlet\6. idea集成tomcat .png)</p><p>![image-20210605211509223](pic\servlet\7. idea集成配置 .png)</p><blockquote><p>完成以上配置可以直接启动服务器</p></blockquote><p>![image-20210605211703017](pic\servlet\8. idea集成tomcat .png)</p><h4 id="3-注意"><a href="#3-注意" class="headerlink" title="3. 注意"></a>3. 注意</h4><blockquote><p>由于idea中相关配置为自动配置 如果服务器启动异常 可以检查一下下图中的配置</p></blockquote><blockquote><p>1读取web目录的路径 web.xml文件路径是否正确</p></blockquote><p>![image-20210605212137831](pic\servlet\9. idea集成tomcat .png)</p><blockquote><p>2项目打包策略是否正确 编译文件路径是否正确（WEB-INF&#x2F;classes）</p></blockquote><p>![image-20210605212304956](pic\servlet\10. idea 集成 tomcat .png)</p><h3 id="5-其它服务器"><a href="#5-其它服务器" class="headerlink" title="5. 其它服务器"></a>5. 其它服务器</h3><ul><li>Jetty   更轻量级，更灵活，被一些框架集成，免费</li><li>JBoss   JBoss支持JavaEE标准，能够作为JavaEE应用服务器使用，Servlet容器只是其 中一部分，免费</li><li>Weblogic 市场上最好的J2EE工具之一，功能大而全，收费</li></ul><h2 id="x3D-x3D-1-3-Servlet-x3D-x3D"><a href="#x3D-x3D-1-3-Servlet-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;1.3  Servlet&#x3D;&#x3D;"></a>&#x3D;&#x3D;1.3  Servlet&#x3D;&#x3D;</h2><ul><li>Servlet是JavaEE规范中的Web开发组件；</li><li>Servlet运行在服务器端，需要Servlet容器的支持，例如Tomcat（运行在tomcat中）；</li><li>可以通过浏览器访问Servlet，Servlet可以生成动态页面返回给浏览器</li></ul><p>![image-20210605212622828](pic\servlet\11. servelt流程  .png)</p><h3 id="1-编写servlet"><a href="#1-编写servlet" class="headerlink" title="1. 编写servlet"></a>1. 编写servlet</h3><h4 id="1-1-实现Servlet接口"><a href="#1-1-实现Servlet接口" class="headerlink" title="1.1 实现Servlet接口"></a>1.1 实现Servlet接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/my&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyServlet1</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyServlet1</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MyServlet1............无参构造。。。。。。。。。。。。。。。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MyServlet1......init初始化。。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ServletConfig <span class="title function_">getServletConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MyServlet1...............service..........&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getServletInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;MyServlet1.................destory......................&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发起请求: 先执行servlet构造   再执行init功能  再执行service业务功能</span></span><br><span class="line"><span class="number">1.</span>MyServlet1............无参构造。。。。。。。。。。。。。。。。。</span><br><span class="line"><span class="number">2.</span>MyServlet1......init初始化。。。。</span><br><span class="line"><span class="number">3.</span>MyServlet1...............service..........</span><br><span class="line">    </span><br><span class="line"><span class="comment">//服务器停止: 执行destory</span></span><br><span class="line"> MyServlet1.................destory......................    </span><br></pre></td></tr></table></figure><h4 id="1-2-继承GenericServlet"><a href="#1-2-继承GenericServlet" class="headerlink" title="1.2 继承GenericServlet"></a>1.2 继承GenericServlet</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/my2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyServlet2</span> <span class="keyword">extends</span> <span class="title class_">GenericServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MyServlet2..............service....核心逻辑&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="x3D-x3D-1-3-继承HttpServlet-x3D-x3D"><a href="#x3D-x3D-1-3-继承HttpServlet-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;1.3 继承HttpServlet&#x3D;&#x3D;"></a>&#x3D;&#x3D;1.3 继承HttpServlet&#x3D;&#x3D;</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//功能实现</span></span><br><span class="line">        System.out.println(<span class="string">&quot;hello world, Servlet。。。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>在web.xml里面配置servlet</li></ol></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--随便给 唯一就行 与mapping里面一致--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置Servlet的完整路径 包名+类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.lisa.controller.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Servlet路径配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--映射的路径 唯一即可--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>&#x3D;&#x3D;@WebServlet(“&#x2F;配置访问路径”)&#x3D;&#x3D; 注意：配置文件和用注解配置作用相同 只选用一种方式 不建议两种同时使用</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//功能实现</span></span><br><span class="line">        System.out.println(<span class="string">&quot;hello world, Servlet。。。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-Servlet生命周期"><a href="#3-Servlet生命周期" class="headerlink" title="3. Servlet生命周期"></a>3. Servlet生命周期</h3><p>![image-20210605214345613](pic\servlet\12. Servlet生命周期 .png)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">浏览器发起请求:</span><br><span class="line"><span class="number">1.</span> 调用无参构造创建Servlet对象</span><br><span class="line"><span class="number">2.</span> 初始化后调用 init () 方法。</span><br><span class="line"><span class="number">3.</span> 调用 service() 方法来处理客户端的请求。</span><br><span class="line"><span class="number">4.</span> 关闭服务器 销毁前调用 destroy() 方法。</span><br><span class="line"><span class="number">5.</span> 最后，Servlet对象是由 JVM 的垃圾回收器进行垃圾回收的。</span><br></pre></td></tr></table></figure><h3 id="4-Servlet线程特性"><a href="#4-Servlet线程特性" class="headerlink" title="4. Servlet线程特性"></a>4. Servlet线程特性</h3><blockquote><p>肯定会有多个客户端同时请求访问一个Servlet，Web服务器怎么处理多个请求呢？</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">多用户访问时，servlet会针对每个请求开启新线程来处理数据收发，因为对每个请求的处理是固定的，一次收发请求就结束。</span><br><span class="line"></span><br><span class="line"> 第一次访问Servlet时，服务器将创建一个该Servlet类的对象，并调用doXXX方法生成响应；多个客户端访问同一个Servlet时，不再创建新的对象，而是共用同一个Servlet对象。可以说，Servlet是多线程单实例的。</span><br></pre></td></tr></table></figure><blockquote><p>注意：多线程访问单实例的情况下，会不会产生线程安全问题？</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">每个线程间，栈是独立的，运行方法时，会压入栈帧，所以运行方法时线程间不会互相影响。</span><br><span class="line">    </span><br><span class="line">因为单实例，所以如果servlet中有成员变量，那么所有线程都会访问到同一个实例的成员变量，会造成线程安全问题。</span><br><span class="line">所以使用servlet时，尽量不要建立成员变量。</span><br></pre></td></tr></table></figure><p>![img](pic\servlet\13. servlet线程特性.png)</p><blockquote><p>但是，在程序中肯定是要共享数据的。使用专门的共享数据空间。在请求和响应流程方面进行操作。</p></blockquote><h3 id="5-ServletConfig"><a href="#5-ServletConfig" class="headerlink" title="5. ServletConfig"></a>5. ServletConfig</h3><blockquote><ol><li>servlet中配置初始化参数，可在servlet中直接读取</li></ol></blockquote><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>public String getInitParameter(String path)</td><td>获取web.xml中指定Servlet的初始化参数值</td></tr><tr><td>public ServletContext getServletContext()</td><td>获取ServletContext实例</td></tr><tr><td>public String getServletName()</td><td>获取当前Servlet的名称</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletConfigServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ServletConfig</span> <span class="variable">servletConfig</span> <span class="operator">=</span> getServletConfig();</span><br><span class="line">        System.out.println(<span class="string">&quot;获得在web.xml中配置的servlet的名称:&quot;</span> + servletConfig.getServletName());</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">myName</span> <span class="operator">=</span> servletConfig.getInitParameter(<span class="string">&quot;myName&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;获得在配置文件中init-param的参数值:&quot;</span> + myName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得在web.xml中  配置的init-param的name</span></span><br><span class="line">        Enumeration&lt;String&gt; names = servletConfig.getInitParameterNames();</span><br><span class="line">        <span class="keyword">while</span> (names.hasMoreElements()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">element</span> <span class="operator">=</span> names.nextElement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> servletConfig.getInitParameter(element);</span><br><span class="line">            System.out.println(element + <span class="string">&quot;====&quot;</span> + value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得context域对象</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">context</span> <span class="operator">=</span> servletConfig.getServletContext();</span><br><span class="line">        System.out.println(<span class="string">&quot;context:&quot;</span> + context);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletConfigServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.lisa.demo.ServletConfigServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>myName<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>lisa<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>myPass<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>1234<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletConfigServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/config<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">获得在web.xml中配置的servlet的名称:ServletConfigServlet</span><br><span class="line">获得在配置文件中init-param的参数值:lisa</span><br><span class="line">myPass====<span class="number">1234</span></span><br><span class="line">myName====lisa</span><br><span class="line">context:org.apache.catalina.core.ApplicationContextFacade@5c1531cb</span><br></pre></td></tr></table></figure><h3 id="x3D-x3D-6-Servlet域对象-x3D-x3D"><a href="#x3D-x3D-6-Servlet域对象-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;6.  Servlet域对象&#x3D;&#x3D;"></a>&#x3D;&#x3D;6.  Servlet域对象&#x3D;&#x3D;</h3><blockquote><p>域对象，是指服务器交互过程中可以用来存储数据的空间，相对独立，生效的时机不同，都可以用来存储信息.  &#x3D;&#x3D;有3大域对象:&#x3D;&#x3D;</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> Request 请求对象</span><br><span class="line">  一个用户可有多个  每次请求都会产生一个  请求结束对象消失 建议用于页面间值的传递.  </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span> Session 会话对象</span><br><span class="line">一个用户一个   每一个浏览器都会产生一个 同一个用户多次访问服务器使用的是同一个session对象</span><br><span class="line">Session会失效: <span class="number">1.</span> 超过最大有效非活动时间。 <span class="number">2.</span> 用户关闭浏览器  <span class="number">3.</span> invalidate方法 设置session失效  </span><br><span class="line">    </span><br><span class="line">建议存放一些用户信息(多次访问 数据共享)，不要把过多的信息存放在session里    </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span> ServletContext（application） 服务器对象</span><br><span class="line"> 全局只有一个  是一个全局的储存信息的空间，服务器开始就存在，服务器关闭才释放.</span><br><span class="line"> 为了节省空间，提高效率，只存放少量的重要信息 (建议只读)  </span><br></pre></td></tr></table></figure><p>以上几个域对象，有统一的方法:</p><table><thead><tr><th>返回值</th><th>方法名</th><th>作用</th></tr></thead><tbody><tr><td><strong>void</strong></td><td><strong>setAttribute(String key,Object value)</strong></td><td><strong>以key&#x2F;value的形式保存对象值</strong></td></tr><tr><td><strong>Object</strong></td><td><strong>getAttribute(String key)</strong></td><td><strong>通过key获取对象值</strong></td></tr></tbody></table><blockquote><p>共享数据的目的:  把一些常用的数据(数据库里面的数据) 加载到内存  提高效率。</p></blockquote><h4 id="x3D-x3D-1-HttpServletRequest-x3D-x3D"><a href="#x3D-x3D-1-HttpServletRequest-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;1. HttpServletRequest&#x3D;&#x3D;"></a>&#x3D;&#x3D;1. HttpServletRequest&#x3D;&#x3D;</h4><h5 id="1-常用方法"><a href="#1-常用方法" class="headerlink" title="1.常用方法"></a>1.常用方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">       * setCharacterEncoding  设置解析报文的字符编码</span></span><br><span class="line"><span class="comment">       * getParameter        获取普通参数</span></span><br><span class="line"><span class="comment">       * getParameterValues  获取同名参数</span></span><br><span class="line"><span class="comment">       * getParameterMap     获取完整参数键值对</span></span><br><span class="line"><span class="comment">       * getInputStream      获取请求正文部分的输入流</span></span><br><span class="line"><span class="comment">       * setAttribute</span></span><br><span class="line"><span class="comment">       * getAttribute</span></span><br><span class="line"><span class="comment">       * getContextPath      获取项目入口  与servletContext.getContextPath 相同</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">       * req.getScheme()     获得协议</span></span><br><span class="line"><span class="comment">       * req.getServerName()  获取服务器地址</span></span><br><span class="line"><span class="comment">       * req.getServerPort()  获取服务器端口</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">       * req.getServletContext().getRealPath(&quot;/&quot;); 通过服务器对象获取 tomcat运行的代码的真实地址</span></span><br><span class="line"><span class="comment">       * req.getServletPath()  获取servlet的配置的路径 如果有通配符* 会忽略通配符</span></span><br><span class="line"><span class="comment">       * req.getRequestURI()   获取当次请求的路径</span></span><br><span class="line"><span class="comment">       * req.getRequestURL()   获取当次请求的真实路径</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">       * */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-充当域对象"><a href="#2-充当域对象" class="headerlink" title="2. 充当域对象"></a>2. 充当域对象</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/demo1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo1</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//每一次请求都会获得一个新的request对象</span></span><br><span class="line">        request.setAttribute(<span class="string">&quot;str&quot;</span>, <span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> request.getAttribute(<span class="string">&quot;str&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo1.....request....str:&quot;</span> + value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo2</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> request.getAttribute(<span class="string">&quot;str&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo2.....request....str:&quot;</span> + value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>数据展示:   &#x3D;&#x3D;在不同的请求直接是独立的。&#x3D;&#x3D;</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">demo1.....request....str:hello</span><br><span class="line">demo2.....request....str:<span class="literal">null</span></span><br></pre></td></tr></table></figure><h5 id="3-其它方法"><a href="#3-其它方法" class="headerlink" title="3.其它方法"></a>3.其它方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/demo4&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo4</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//request常用方法</span></span><br><span class="line">        <span class="comment">//设置解析报文的字符编码(处理请求数据编码)  tomcat内置式ISO8859-1</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"><span class="comment">//        String name = request.getParameter(&quot;name&quot;);//1.获得普通参数的数据</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;name:&quot; + name);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        String[] hobbies = request.getParameterValues(&quot;hobby&quot;);//2.获得同名的参数的数据</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;hobby:&quot; + Arrays.toString(hobbies));</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        Map&lt;String, String[]&gt; map = request.getParameterMap();//3.获得参数列表</span></span><br><span class="line"><span class="comment">//        map.forEach((k, v) -&gt; &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;k:&quot; + k + &quot;====&quot; + &quot;v:&quot; + Arrays.toString(v));</span></span><br><span class="line"><span class="comment">//        &#125;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//自己去数据进行封装的时候</span></span><br><span class="line">        <span class="type">ServletInputStream</span> <span class="variable">stream</span> <span class="operator">=</span> request.getInputStream();<span class="comment">//获得请求正文的输入流</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(stream));</span><br><span class="line">        <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;data:&quot;</span> + data);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果把流读走 再获取的话 就会有问题</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;username:&quot;</span>+username);</span><br><span class="line">        </span><br><span class="line">                <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> request.getScheme()+<span class="string">&quot;://&quot;</span>+request.getServerName()+<span class="string">&quot;:&quot;</span>+request.getServerPort()+request.getContextPath()+<span class="string">&quot;/&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;path:&quot;</span>+path);<span class="comment">//path:http://localhost:8080/servlet2/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得服务器本地路径  使用较少</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">realPath</span> <span class="operator">=</span> request.getServletContext().getRealPath(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;realPath:&quot;</span>+realPath);<span class="comment">//realPath:F:\idea_workspace\2\servlet_2\out\artifacts\servlet_2_war_exploded\</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//当前servlet的配置的路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">servletPath</span> <span class="operator">=</span> request.getServletPath();</span><br><span class="line">        System.out.println(<span class="string">&quot;servletPath:&quot;</span>+servletPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//相对根路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">requestURI</span> <span class="operator">=</span> request.getRequestURI();</span><br><span class="line">        System.out.println(<span class="string">&quot;requestURI:&quot;</span>+requestURI);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//访问的真实路径</span></span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">requestURL</span> <span class="operator">=</span> request.getRequestURL();</span><br><span class="line">        System.out.println(<span class="string">&quot;requestURL:&quot;</span>+requestURL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-HttpSession"><a href="#2-HttpSession" class="headerlink" title="2. HttpSession"></a>2. HttpSession</h4><h5 id="1-常用方法-1"><a href="#1-常用方法-1" class="headerlink" title="1.常用方法"></a>1.常用方法</h5><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>setAttribute(String key,Object value)</td><td>以key&#x2F;value的形式保存对象值</td></tr><tr><td>getAttribute(String key)</td><td>通过key获取对象值</td></tr><tr><td>getMaxInactiveInterval()</td><td>获取session的有效非活动时间，以秒为单位(2次时间的间隔)</td></tr><tr><td>getId()</td><td>获取session对象的编号</td></tr><tr><td>invalidate()</td><td>设置session对象失效</td></tr></tbody></table><h5 id="2-充当域对象-1"><a href="#2-充当域对象-1" class="headerlink" title="2. 充当域对象"></a>2. 充当域对象</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@WebServlet(&quot;/demo1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo1</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//每一次请求都会获得一个新的request对象</span></span><br><span class="line">        request.setAttribute(<span class="string">&quot;str&quot;</span>, <span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> request.getAttribute(<span class="string">&quot;str&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo1.....request....str:&quot;</span> + value);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用session对象存储数据</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">name</span> <span class="operator">=</span> session.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo1.....session.....name:&quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo2</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> request.getAttribute(<span class="string">&quot;str&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo2.....request....str:&quot;</span> + value);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得session的数据</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">name</span> <span class="operator">=</span> session.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo2.....session....name:&quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>数据展示:  &#x3D;&#x3D;session会话的数据  在同一个用户多次访问 可以在多个请求里面共享   不同用户间独立&#x3D;&#x3D;</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">demo1.....request....str:hello</span><br><span class="line">demo1.....session.....name:张三</span><br><span class="line">demo2.....request....str:<span class="literal">null</span></span><br><span class="line">demo2.....session....name:张三</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更换浏览器   不同用户间独立</span></span><br><span class="line">demo2.....request....str:<span class="literal">null</span></span><br><span class="line">demo2.....session....name:<span class="literal">null</span>    </span><br></pre></td></tr></table></figure><h5 id="3-其它方法-1"><a href="#3-其它方法-1" class="headerlink" title="3.其它方法"></a>3.其它方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/demo5&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo5</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//获得session对象</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line"><span class="comment">//        session.setMaxInactiveInterval(5);</span></span><br><span class="line">        <span class="comment">//失效方式:</span></span><br><span class="line">        <span class="comment">//1.设置最大的有效非活动时间(2次访问时间的间隔)  超过时间会失效  再次访问会自动创建  tomcat默认是半个小时</span></span><br><span class="line">        <span class="comment">//2. 用户自己关闭浏览器</span></span><br><span class="line">        <span class="comment">//3. 手动调用失效方法(同时也会清空session里面所有的数据)</span></span><br><span class="line">        <span class="comment">//  一般用户退出的时候  会把用户登录时候session.setAttribute();的数据都 session.removeAttribute();</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sessionId</span> <span class="operator">=</span> session.getId();</span><br><span class="line">        System.out.println(<span class="string">&quot;demo5......sessionId:&quot;</span>+sessionId);</span><br><span class="line">        session.invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-登录访问控制-数据库版本"><a href="#4-登录访问控制-数据库版本" class="headerlink" title="4. 登录访问控制(数据库版本)"></a>4. 登录访问控制(数据库版本)</h5><blockquote><ol><li>查询所有的用户信息(没有登录的状态下)</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserListServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        List&lt;UserInfo&gt; userInfoList = userService.selectAllUser();</span><br><span class="line">        <span class="keyword">if</span> (userInfoList == <span class="literal">null</span> || userInfoList.isEmpty()) &#123;</span><br><span class="line">            writer.println(<span class="string">&quot;没有找到合适的数据&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;html&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;head&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;title&gt;查询所有用户信息&lt;/title&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;link rel=\&quot;stylesheet\&quot; type=\&quot;text/css\&quot; href=\&quot;&quot;</span> + request.getContextPath() + <span class="string">&quot;/css/bootstrap.css\&quot;/&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;/head&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;body&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;欢迎你 ???&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;hr/&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;table class=&#x27;table table-bordered table-hover&#x27;&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;h2 align=&#x27;center&#x27;&gt;用户表&lt;/h2&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;thead&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;tr class=\&quot;active\&quot;&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;th&gt;用户id&lt;/th&gt;&lt;th&gt;用户名&lt;/th&gt;&lt;th&gt;用户头像&lt;/th&gt;&lt;th&gt;操作&lt;/th&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;/thead&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;tbody&gt;&quot;</span>);</span><br><span class="line">            <span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (UserInfo userInfo : userInfoList) &#123;</span><br><span class="line">                String info=<span class="string">&quot;danger&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                    info = <span class="string">&quot;info&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                writer.println(<span class="string">&quot;&lt;tr class=&#x27;&quot;</span>+info+<span class="string">&quot;&#x27;&gt;&quot;</span>);</span><br><span class="line">                writer.write(<span class="string">&quot;&lt;td&gt;&quot;</span>);</span><br><span class="line">                writer.write(userInfo.getId().toString());</span><br><span class="line">                writer.write(<span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                writer.write(<span class="string">&quot;&lt;td&gt;&quot;</span>);</span><br><span class="line">                writer.write(userInfo.getUsername());</span><br><span class="line">                writer.write(<span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                writer.write(<span class="string">&quot;&lt;td&gt;&quot;</span>);</span><br><span class="line">                writer.write(userInfo.getUserImage());</span><br><span class="line">                writer.write(<span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line">                writer.write(<span class="string">&quot;&lt;td&gt;&quot;</span>);</span><br><span class="line">                writer.write(<span class="string">&quot;&lt;a href=&#x27;#&#x27;&gt;修改&lt;/a&gt;  &lt;a href=&#x27;#&#x27;&gt;删除&lt;/a&gt;&quot;</span>);</span><br><span class="line">                writer.write(<span class="string">&quot;&lt;/td&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">                writer.println(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;/tbody&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;/table&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class="line">            writer.print(<span class="string">&quot;&lt;/html&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        writer.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>数据展示</li></ol></blockquote><p>![image-20210622210724658](pic\servlet\15. session .png)</p><blockquote><ol start="3"><li>因此在展示数据的前提下  必须执行登录的功能</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserListServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        <span class="type">UserInfo</span> <span class="variable">user</span> <span class="operator">=</span> (UserInfo) session.getAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//证明没有登录</span></span><br><span class="line">            writer.println(<span class="string">&quot;您还没有登录  请先&lt;a href=&#x27;&quot;</span> + request.getContextPath() + <span class="string">&quot;userLogin.html&#x27;&gt;登录&lt;/a&gt;!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            List&lt;UserInfo&gt; userInfoList = userService.selectAllUser();</span><br><span class="line">            <span class="keyword">if</span> (userInfoList == <span class="literal">null</span> || userInfoList.isEmpty()) &#123;</span><br><span class="line">                writer.println(<span class="string">&quot;没有找到合适的数据&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                writer.print(<span class="string">&quot;&lt;html&gt;&quot;</span>);</span><br><span class="line">                writer.print(<span class="string">&quot;&lt;head&gt;&quot;</span>);</span><br><span class="line">                writer.print(<span class="string">&quot;&lt;title&gt;查询所有用户信息&lt;/title&gt;&quot;</span>);</span><br><span class="line">                <span class="comment">//......</span></span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="4"><li>登录功能</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserLoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(UserLoginServlet.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//接收页面数据</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="comment">//验证用户名和密码是否正确</span></span><br><span class="line">        <span class="type">UserInfo</span> <span class="variable">userInfo</span> <span class="operator">=</span> userService.userLogin(username, password);</span><br><span class="line"></span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * session的使用场景: 1. 访问控制 --&gt; 登录访问控制   2. 共享数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (userInfo == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">//用户名或者密码不符</span></span><br><span class="line">            logger.error(<span class="string">&quot;用户名或者密码不符:username:&#123;&#125;,password:&#123;&#125;&quot;</span>, username, password);</span><br><span class="line">            writer.println(<span class="string">&quot;用户名或者密码不符,请&lt;a href=&#x27;&quot;</span> + request.getContextPath() + <span class="string">&quot;userLogin.html&#x27;&gt;重新登录&lt;/a&gt;!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//登录成功---&gt; 显示可以执行的功能</span></span><br><span class="line">            session.setAttribute(<span class="string">&quot;user&quot;</span>, userInfo);</span><br><span class="line">            <span class="comment">//显示可执行的其它功能</span></span><br><span class="line">            writer.println(<span class="string">&quot;&lt;a href=&#x27;&quot;</span>+request.getContextPath()+<span class="string">&quot;/list&#x27;&gt;查看所有用户信息&lt;/a&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        writer.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="5"><li>退出功能</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/logout&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserLogoutServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        session.removeAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">        writer.println(<span class="string">&quot;&lt;a href=&#x27;&quot;</span> + request.getContextPath() + <span class="string">&quot;/userLogin.html&#x27;&gt;登录页面&lt;/a&gt;&quot;</span>);</span><br><span class="line">        writer.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-ServletContext"><a href="#3-ServletContext" class="headerlink" title="3. ServletContext"></a>3. ServletContext</h4><h5 id="1-常用方法-2"><a href="#1-常用方法-2" class="headerlink" title="1. 常用方法"></a>1. 常用方法</h5><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>public void setAttribute(String name，Object object)</td><td>绑定一个java对象和一个属性名，并存放到ServletContext中，参数name指定属性名，参数Object表示共享数据</td></tr><tr><td>pulbic Object getAttribute(String name)</td><td>根据参数给定的属性名，返回一个Object类型的对象</td></tr><tr><td>public String getContextpath()</td><td>返回当前web应用的URL入口</td></tr><tr><td>public String getInitParameter(String name)</td><td>返回web应用范围内匹配的初始化参数值。在web.xml中，<web-app>元素中的<context-param>元素表示应用范围内的初始化参数</td></tr></tbody></table><h5 id="2-充当域对象-2"><a href="#2-充当域对象-2" class="headerlink" title="2. 充当域对象"></a>2. 充当域对象</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/demo1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo1</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//每一次请求都会获得一个新的request对象</span></span><br><span class="line">        request.setAttribute(<span class="string">&quot;str&quot;</span>, <span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> request.getAttribute(<span class="string">&quot;str&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo1.....request....str:&quot;</span> + value);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用session对象存储数据</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">name</span> <span class="operator">=</span> session.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo1.....session.....name:&quot;</span> + name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用ServletContext对象存储数据</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> getServletContext();</span><br><span class="line">        servletContext.setAttribute(<span class="string">&quot;num&quot;</span>,<span class="number">1000</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">num</span> <span class="operator">=</span> servletContext.getAttribute(<span class="string">&quot;num&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo1.....ServletContext.....num:&quot;</span> + num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo2</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> request.getAttribute(<span class="string">&quot;str&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo2.....request....str:&quot;</span> + value);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得session的数据</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">name</span> <span class="operator">=</span> session.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo2.....session....name:&quot;</span> + name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得ServletContext的数据</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> getServletContext();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">num</span> <span class="operator">=</span> servletContext.getAttribute(<span class="string">&quot;num&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;demo2.....ServletContext....num:&quot;</span> + num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>数据展示:</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">demo1.....request....str:hello</span><br><span class="line">demo1.....session.....name:张三</span><br><span class="line">demo1.....ServletContext.....num:<span class="number">1000</span></span><br><span class="line">demo2.....request....str:<span class="literal">null</span></span><br><span class="line">demo2.....session....name:张三</span><br><span class="line">demo2.....ServletContext....num:<span class="number">1000</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//更换浏览器 也能够获得ServletContext里面的数据   同一个服务器</span></span><br><span class="line">demo2.....request....str:<span class="literal">null</span></span><br><span class="line">demo2.....session....name:<span class="literal">null</span></span><br><span class="line">demo2.....ServletContext....num:<span class="number">1000</span></span><br></pre></td></tr></table></figure><h5 id="3-其它方法-2"><a href="#3-其它方法-2" class="headerlink" title="3.其它方法"></a>3.其它方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/demo3&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo3</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//获得ServletContext的对象</span></span><br><span class="line">        <span class="comment">//ServletContext context = getServletConfig().getServletContext();</span></span><br><span class="line">        <span class="comment">//ServletContext context = request.getServletContext();</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> servletContext.getContextPath();</span><br><span class="line">        System.out.println(<span class="string">&quot;获得项目部署服务器的根路径:&quot;</span>+path);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>数据展示: </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ServletContext....getContextPath:/servlet2</span><br></pre></td></tr></table></figure><p>![image-20210608215129148](pic\servlet\14. ServletContext_path .png)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/demo3&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo3</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//获得ServletContext的对象</span></span><br><span class="line">        <span class="comment">//ServletContext context = getServletConfig().getServletContext();</span></span><br><span class="line">        <span class="comment">//ServletContext context = request.getServletContext();</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> servletContext.getContextPath();</span><br><span class="line">        System.out.println(<span class="string">&quot;获得项目部署服务器的根路径:&quot;</span> + path);</span><br><span class="line"></span><br><span class="line">        Enumeration&lt;String&gt; names = servletContext.getInitParameterNames();</span><br><span class="line">        <span class="keyword">while</span> (names.hasMoreElements()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">element</span> <span class="operator">=</span> names.nextElement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> servletContext.getInitParameter(element);</span><br><span class="line">            System.out.println(<span class="string">&quot;name:&quot;</span> + element + <span class="string">&quot;====&quot;</span> + <span class="string">&quot;value:&quot;</span> + value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>str1<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>str2<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>world<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>数据展示</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">获得项目部署服务器的根路径:/servlet2</span><br><span class="line">name:str1====value:hello</span><br><span class="line">name:str2====value:world</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>标题</title>
      <link href="/2022/07/31/%E6%A0%87%E9%A2%98/"/>
      <url>/2022/07/31/%E6%A0%87%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>这是文章内容</p>]]></content>
      
      
      <categories>
          
          <category> 其他类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
